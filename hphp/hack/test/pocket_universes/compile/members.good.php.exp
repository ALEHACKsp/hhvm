# members.good.php starts here

.filepath "members.good.php";

.hh_file 1;
.adata A_0 = """Y:2:{s:4:\"kind\";i:20;s:13:\"generic_types\";y:1:{Y:1:{s:4:\"kind\";i:9;}}}""";
.adata A_1 = """Y:2:{s:4:\"kind\";i:21;s:13:\"generic_types\";y:1:{Y:1:{s:4:\"kind\";i:4;}}}""";
.adata A_2 = """k:4:{s:2:\"A0\";s:2:\"A1\";s:2:\"A2\";s:2:\"A3\";}""";

.main (1,1) {
  .srcloc 3:7,3:7;
  DefCls 0
  Int 1
  RetC
}

.function (21,26) <"HH\\void" N > foo(<"HH\\vec<HH\\mixed>" "HH\\vec" > $v) {
  .numiters 1;
  .declvars $x;
  .srcloc 21:1,26:102;
  Array @A_0
  VerifyParamTypeTS $v
  .srcloc 22:12,22:13;
  CGetL $v
  .srcloc 22:12,22:13;
  IterInit 0 NK V:$x L0
  .try {
  L1:
    .srcloc 23:10,23:22;
    NullUninit
    NullUninit
    NullUninit
    .srcloc 23:20,23:21;
    CGetL $x
    .srcloc 23:10,23:22;
    FCallClsMethodD <> 1 1 "0" - "" "" "C" "pu$E$val"
    .srcloc 23:5,23:23;
    Print
    .srcloc 23:5,23:23;
    PopC
    .srcloc 24:10,24:13;
    String "\n"
    .srcloc 24:5,24:14;
    Print
    .srcloc 24:5,24:14;
    PopC
    .srcloc 22:3,25:65;
    IterNext 0 NK V:$x L1
    Jmp L0
  } .catch {
    IterFree 0
    Throw
  }
L0:
  .srcloc 26:2,26:2;
  Null
  RetC
}

.function ["__EntryPoint"("""y:0:{}""")] (29,32) <"HH\\void" N > main() {
  .declvars $v;
  .srcloc 30:8,30:22;
  NullUninit
  NullUninit
  NullUninit
  .srcloc 30:8,30:22;
  FCallClsMethodD <> 0 1 "" - "" "" "C" "pu$E$Members"
  .srcloc 30:3,30:22;
  SetL $v
  .srcloc 30:3,30:23;
  PopC
  .srcloc 31:3,31:9;
  NullUninit
  NullUninit
  NullUninit
  .srcloc 31:7,31:8;
  CGetL $v
  .srcloc 31:3,31:9;
  FCallFuncD <> 1 1 "0" - "" "foo"
  .srcloc 31:3,31:9;
  PopC
  .srcloc 32:2,32:2;
  Null
  RetC
}

.class C (3,19) {
  .method [private static "__Memoize"("""y:0:{}""")] (4,4) <"HH\\keyset<HH\\string>" "HH\\keyset" extended_hint> pu$E$Members$memoize_impl() {
    .srcloc 4:8,4:8;
    Keyset @A_2
    .srcloc 4:8,4:8;
    Array @A_1
    VerifyRetTypeTS
    RetC
  }
  .method [private static "__Memoize"("""y:0:{}""")] (4,4) <"HH\\mixed" N > pu$E$val$memoize_impl(<"HH\\string" "HH\\string" > $atom) {
    .srcloc 4:8,4:8;
    VerifyParamType $atom
    .srcloc 4:8,4:8;
    String "A0"
    .srcloc 4:8,4:8;
    CGetL2 $atom
    Eq
    JmpNZ L0
    .srcloc 4:8,4:8;
    String "A1"
    .srcloc 4:8,4:8;
    CGetL2 $atom
    Eq
    JmpNZ L1
    .srcloc 4:8,4:8;
    String "A2"
    .srcloc 4:8,4:8;
    CGetL2 $atom
    Eq
    JmpNZ L2
    .srcloc 4:8,4:8;
    String "A3"
    .srcloc 4:8,4:8;
    CGetL2 $atom
    Eq
    JmpNZ L3
    Jmp L4
  L0:
    .srcloc 7:13,7:14;
    Int 42
    .srcloc 4:8,4:8;
    RetC
  L1:
    .srcloc 10:13,10:14;
    Int 43
    .srcloc 4:8,4:8;
    RetC
  L2:
    .srcloc 13:13,13:14;
    Int 44
    .srcloc 4:8,4:8;
    RetC
  L3:
    .srcloc 16:13,16:14;
    Int 45
    .srcloc 4:8,4:8;
    RetC
  L4:
    .srcloc 4:8,4:8;
    NewObjD "Exception"
    Dup
    NullUninit
    NullUninit
    .srcloc 4:8,4:8;
    String "\\C:@E::val unknown atom access: "
    .srcloc 4:8,4:8;
    CGetL $atom
    Concat
    .srcloc 4:8,4:8;
    FCallCtor <LockWhileUnwinding> 1 1 "0" - "" ""
    PopC
    LockObj
    .srcloc 4:8,4:8;
    Throw
    .srcloc 4:9,4:9;
    Null
    RetC
  }
  .method [public static "__Memoize"("""y:0:{}""")] (4,4) <"HH\\keyset<HH\\string>" "HH\\keyset" extended_hint> pu$E$Members() {
    .ismemoizewrapper;
    .srcloc 4:8,4:8;
    MemoGet L0 L:0+0
    RetC
  L0:
    NullUninit
    NullUninit
    NullUninit
    FCallClsMethodD <> 0 1 "" - "" "" "C" "pu$E$Members$memoize_impl"
    MemoSet L:0+0
    RetC
  }
  .method [public static "__Memoize"("""y:0:{}""")] (4,4) <"HH\\mixed" N > pu$E$val(<"HH\\string" "HH\\string" > $atom) {
    .ismemoizewrapper;
    .srcloc 4:8,4:8;
    VerifyParamType $atom
    GetMemoKeyL $atom
    SetL _1
    PopC
    MemoGet L0 L:1+1
    RetC
  L0:
    NullUninit
    NullUninit
    NullUninit
    CGetL $atom
    FCallClsMethodD <> 1 1 "" - "" "" "C" "pu$E$val$memoize_impl"
    MemoSet L:1+1
    RetC
  }
}

# members.good.php ends here
