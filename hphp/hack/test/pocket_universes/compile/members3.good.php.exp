# members3.good.php starts here

.filepath "members3.good.php";

.hh_file 1;
.adata A_0 = """k:1:{s:1:\"S\";}""";
.adata A_1 = """k:1:{s:2:\"S2\";}""";

.main (1,1) {
  .srcloc 3:7,3:7;
  DefCls 0
  .srcloc 10:7,10:8;
  DefCls 1
  .srcloc 12:7,12:7;
  DefCls 2
  Int 1
  RetC
}

.function ["__EntryPoint"("""y:0:{}""")] (23,49) <"HH\\void" N > main() {
  .numiters 1;
  .declvars $k;
  .srcloc 25:8,25:23;
  String "Members in C\n"
  .srcloc 25:3,25:24;
  Print
  .srcloc 25:3,25:24;
  PopC
  .srcloc 26:12,26:26;
  NullUninit
  NullUninit
  NullUninit
  .srcloc 26:12,26:26;
  FCallClsMethodD <> 0 1 "" - "" "" "C" "pu$E$Members"
  .srcloc 26:12,26:26;
  IterInit 0 NK V:$k L0
  .try {
  L1:
    .srcloc 27:10,27:11;
    CGetL $k
    .srcloc 27:5,27:12;
    Print
    .srcloc 27:5,27:12;
    PopC
    .srcloc 28:10,28:13;
    String "\n"
    .srcloc 28:5,28:14;
    Print
    .srcloc 28:5,28:14;
    PopC
    .srcloc 26:3,29:67;
    IterNext 0 NK V:$k L1
    Jmp L0
  } .catch {
    IterFree 0
    Throw
  }
L0:
  .srcloc 31:8,31:24;
  String "Members in XX\n"
  .srcloc 31:3,31:25;
  Print
  .srcloc 31:3,31:25;
  PopC
  .srcloc 32:12,32:27;
  NullUninit
  NullUninit
  NullUninit
  .srcloc 32:12,32:27;
  FCallClsMethodD <> 0 1 "" - "" "" "XX" "pu$E$Members"
  .srcloc 32:12,32:27;
  IterInit 0 NK V:$k L2
  .try {
  L3:
    .srcloc 33:10,33:11;
    CGetL $k
    .srcloc 33:5,33:12;
    Print
    .srcloc 33:5,33:12;
    PopC
    .srcloc 34:10,34:13;
    String "\n"
    .srcloc 34:5,34:14;
    Print
    .srcloc 34:5,34:14;
    PopC
    .srcloc 32:3,35:68;
    IterNext 0 NK V:$k L3
    Jmp L2
  } .catch {
    IterFree 0
    Throw
  }
L2:
  .srcloc 37:8,37:23;
  String "Members in D\n"
  .srcloc 37:3,37:24;
  Print
  .srcloc 37:3,37:24;
  PopC
  .srcloc 38:8,38:17;
  String "From E\n"
  .srcloc 38:3,38:18;
  Print
  .srcloc 38:3,38:18;
  PopC
  .srcloc 39:12,39:26;
  NullUninit
  NullUninit
  NullUninit
  .srcloc 39:12,39:26;
  FCallClsMethodD <> 0 1 "" - "" "" "D" "pu$E$Members"
  .srcloc 39:12,39:26;
  IterInit 0 NK V:$k L4
  .try {
  L5:
    .srcloc 40:10,40:11;
    CGetL $k
    .srcloc 40:5,40:12;
    Print
    .srcloc 40:5,40:12;
    PopC
    .srcloc 41:10,41:13;
    String "\n"
    .srcloc 41:5,41:14;
    Print
    .srcloc 41:5,41:14;
    PopC
    .srcloc 39:3,42:67;
    IterNext 0 NK V:$k L5
    Jmp L4
  } .catch {
    IterFree 0
    Throw
  }
L4:
  .srcloc 43:8,43:17;
  String "From F\n"
  .srcloc 43:3,43:18;
  Print
  .srcloc 43:3,43:18;
  PopC
  .srcloc 44:12,44:26;
  NullUninit
  NullUninit
  NullUninit
  .srcloc 44:12,44:26;
  FCallClsMethodD <> 0 1 "" - "" "" "D" "pu$F$Members"
  .srcloc 44:12,44:26;
  IterInit 0 NK V:$k L6
  .try {
  L7:
    .srcloc 45:10,45:11;
    CGetL $k
    .srcloc 45:5,45:12;
    Print
    .srcloc 45:5,45:12;
    PopC
    .srcloc 46:10,46:13;
    String "\n"
    .srcloc 46:5,46:14;
    Print
    .srcloc 46:5,46:14;
    PopC
    .srcloc 44:3,47:67;
    IterNext 0 NK V:$k L7
    Jmp L6
  } .catch {
    IterFree 0
    Throw
  }
L6:
  .srcloc 49:2,49:2;
  Null
  RetC
}

.class C (3,8) {
  .method [private static "__Memoize"("""y:0:{}""")] (4,4) <"HH\\void" N > pu$E$Members$memoize_impl() {
    .srcloc 4:8,4:8;
    Keyset @A_0
    .srcloc 4:8,4:8;
    RetC
  }
  .method [private static "__Memoize"("""y:0:{}""")] (4,4) <"HH\\mixed" N > pu$E$val$memoize_impl(<"HH\\string" "HH\\string" > $atom) {
    .srcloc 4:8,4:8;
    VerifyParamType $atom
    .srcloc 4:8,4:8;
    String "S"
    .srcloc 4:8,4:8;
    CGetL2 $atom
    Eq
    JmpNZ L0
    Jmp L1
  L0:
    .srcloc 6:15,6:21;
    String "Hello"
    .srcloc 4:8,4:8;
    RetC
  L1:
    .srcloc 4:8,4:8;
    NewObjD "Exception"
    Dup
    NullUninit
    NullUninit
    .srcloc 4:8,4:8;
    String "\\C:@E::val unknown atom access: "
    .srcloc 4:8,4:8;
    CGetL $atom
    Concat
    .srcloc 4:8,4:8;
    FCallCtor <LockWhileUnwinding> 1 1 "0" - "" ""
    PopC
    LockObj
    .srcloc 4:8,4:8;
    Throw
    .srcloc 4:9,4:9;
    Null
    RetC
  }
  .method [public static "__Memoize"("""y:0:{}""")] (4,4) <"HH\\void" N > pu$E$Members() {
    .ismemoizewrapper;
    .srcloc 4:8,4:8;
    MemoGet L0 L:0+0
    RetC
  L0:
    NullUninit
    NullUninit
    NullUninit
    FCallClsMethodD <> 0 1 "" - "" "" "C" "pu$E$Members$memoize_impl"
    MemoSet L:0+0
    RetC
  }
  .method [public static "__Memoize"("""y:0:{}""")] (4,4) <"HH\\mixed" N > pu$E$val(<"HH\\string" "HH\\string" > $atom) {
    .ismemoizewrapper;
    .srcloc 4:8,4:8;
    VerifyParamType $atom
    GetMemoKeyL $atom
    SetL _1
    PopC
    MemoGet L0 L:1+1
    RetC
  L0:
    NullUninit
    NullUninit
    NullUninit
    CGetL $atom
    FCallClsMethodD <> 1 1 "" - "" "" "C" "pu$E$val$memoize_impl"
    MemoSet L:1+1
    RetC
  }
}

.class XX (10,10) extends C {
}

.class D (12,20) extends XX {
  .method [private static "__Memoize"("""y:0:{}""") "__Override"("""y:0:{}""")] (13,13) <"HH\\void" N > pu$E$Members$memoize_impl() {
    .numiters 1;
    .declvars $result $class $method $parent_members $p $_;
    .srcloc 13:8,13:8;
    Keyset @A_1
    .srcloc 13:8,13:8;
    SetL $result
    .srcloc 13:8,13:8;
    PopC
    .srcloc 13:8,13:8;
    NewObjD "ReflectionClass"
    Dup
    NullUninit
    NullUninit
    .srcloc 13:8,13:8;
    String "XX"
    .srcloc 13:8,13:8;
    FCallCtor <LockWhileUnwinding> 1 1 "0" - "" ""
    PopC
    LockObj
    .srcloc 13:8,13:8;
    SetL $class
    .srcloc 13:8,13:8;
    PopC
    .try {
      .srcloc 13:8,13:8;
      CGetL $class
      NullUninit
      NullUninit
      .srcloc 13:8,13:8;
      String "pu$E$Members"
      .srcloc 13:8,13:8;
      FCallObjMethodD <> 1 1 "0" - "" "" NullThrows "getMethod"
      .srcloc 13:8,13:8;
      SetL $method
      .srcloc 13:8,13:8;
      PopC
      .srcloc 13:8,13:8;
      CGetL $method
      NullUninit
      NullUninit
      .srcloc 13:8,13:8;
      Null
      .srcloc 13:8,13:8;
      FCallObjMethodD <> 1 1 "0" - "" "" NullThrows "invoke"
      .srcloc 13:8,13:8;
      SetL $parent_members
      .srcloc 13:8,13:8;
      PopC
      .srcloc 13:8,13:8;
      CGetL $parent_members
      .srcloc 13:8,13:8;
      IterInit 0 NK V:$p L0
      .try {
      L1:
        .srcloc 13:8,13:8;
        CGetL $p
        .srcloc 13:8,13:8;
        BaseL $result Define
        .srcloc 13:8,13:8;
        SetM 0 W
        .srcloc 13:8,13:8;
        PopC
        .srcloc 13:8,13:8;
        IterNext 0 NK V:$p L1
        Jmp L0
      } .catch {
        IterFree 0
        Throw
      }
    L0:
      .srcloc 13:8,13:8;
      Jmp L2
    } .catch {
      Dup
      InstanceOfD "ReflectionException"
      JmpZ L3
      SetL $_
      PopC
      .srcloc 13:8,13:8;
      Jmp L2
    L3:
      Throw
    }
  L2:
    .srcloc 13:8,13:8;
    CGetL $result
    .srcloc 13:8,13:8;
    RetC
  }
  .method [private static "__Memoize"("""y:0:{}""")] (13,13) <"HH\\mixed" N > pu$E$val$memoize_impl(<"HH\\string" "HH\\string" > $atom) {
    .srcloc 13:8,13:8;
    VerifyParamType $atom
    .srcloc 13:8,13:8;
    String "S2"
    .srcloc 13:8,13:8;
    CGetL2 $atom
    Eq
    JmpNZ L0
    Jmp L1
  L0:
    .srcloc 14:16,14:22;
    String "youpi"
    .srcloc 13:8,13:8;
    RetC
  L1:
    .srcloc 13:8,13:8;
    NullUninit
    NullUninit
    NullUninit
    .srcloc 13:8,13:8;
    CGetL $atom
    .srcloc 13:8,13:8;
    FCallClsMethodSD <> 1 1 "0" - "" "" Parent "pu$E$val"
    .srcloc 13:8,13:8;
    RetC
    .srcloc 13:9,13:9;
    Null
    RetC
  }
  .method [private static "__Memoize"("""y:0:{}""") "__Override"("""y:0:{}""")] (16,16) <"HH\\void" N > pu$F$Members$memoize_impl() {
    .numiters 1;
    .declvars $result $class $method $parent_members $p $_;
    .srcloc 16:8,16:8;
    Keyset @A_0
    .srcloc 16:8,16:8;
    SetL $result
    .srcloc 16:8,16:8;
    PopC
    .srcloc 16:8,16:8;
    NewObjD "ReflectionClass"
    Dup
    NullUninit
    NullUninit
    .srcloc 16:8,16:8;
    String "XX"
    .srcloc 16:8,16:8;
    FCallCtor <LockWhileUnwinding> 1 1 "0" - "" ""
    PopC
    LockObj
    .srcloc 16:8,16:8;
    SetL $class
    .srcloc 16:8,16:8;
    PopC
    .try {
      .srcloc 16:8,16:8;
      CGetL $class
      NullUninit
      NullUninit
      .srcloc 16:8,16:8;
      String "pu$F$Members"
      .srcloc 16:8,16:8;
      FCallObjMethodD <> 1 1 "0" - "" "" NullThrows "getMethod"
      .srcloc 16:8,16:8;
      SetL $method
      .srcloc 16:8,16:8;
      PopC
      .srcloc 16:8,16:8;
      CGetL $method
      NullUninit
      NullUninit
      .srcloc 16:8,16:8;
      Null
      .srcloc 16:8,16:8;
      FCallObjMethodD <> 1 1 "0" - "" "" NullThrows "invoke"
      .srcloc 16:8,16:8;
      SetL $parent_members
      .srcloc 16:8,16:8;
      PopC
      .srcloc 16:8,16:8;
      CGetL $parent_members
      .srcloc 16:8,16:8;
      IterInit 0 NK V:$p L0
      .try {
      L1:
        .srcloc 16:8,16:8;
        CGetL $p
        .srcloc 16:8,16:8;
        BaseL $result Define
        .srcloc 16:8,16:8;
        SetM 0 W
        .srcloc 16:8,16:8;
        PopC
        .srcloc 16:8,16:8;
        IterNext 0 NK V:$p L1
        Jmp L0
      } .catch {
        IterFree 0
        Throw
      }
    L0:
      .srcloc 16:8,16:8;
      Jmp L2
    } .catch {
      Dup
      InstanceOfD "ReflectionException"
      JmpZ L3
      SetL $_
      PopC
      .srcloc 16:8,16:8;
      Jmp L2
    L3:
      Throw
    }
  L2:
    .srcloc 16:8,16:8;
    CGetL $result
    .srcloc 16:8,16:8;
    RetC
  }
  .method [private static "__Memoize"("""y:0:{}""")] (16,16) <"HH\\mixed" N > pu$F$fal$memoize_impl(<"HH\\string" "HH\\string" > $atom) {
    .srcloc 16:8,16:8;
    VerifyParamType $atom
    .srcloc 16:8,16:8;
    String "S"
    .srcloc 16:8,16:8;
    CGetL2 $atom
    Eq
    JmpNZ L0
    Jmp L1
  L0:
    .srcloc 18:16,18:20;
    String "blu"
    .srcloc 16:8,16:8;
    RetC
  L1:
    .srcloc 16:8,16:8;
    NullUninit
    NullUninit
    NullUninit
    .srcloc 16:8,16:8;
    CGetL $atom
    .srcloc 16:8,16:8;
    FCallClsMethodSD <> 1 1 "0" - "" "" Parent "pu$F$fal"
    .srcloc 16:8,16:8;
    RetC
    .srcloc 16:9,16:9;
    Null
    RetC
  }
  .method [public static "__Memoize"("""y:0:{}""") "__Override"("""y:0:{}""")] (13,13) <"HH\\void" N > pu$E$Members() {
    .ismemoizewrapper;
    .srcloc 13:8,13:8;
    MemoGet L0 L:0+0
    RetC
  L0:
    NullUninit
    NullUninit
    NullUninit
    FCallClsMethodD <> 0 1 "" - "" "" "D" "pu$E$Members$memoize_impl"
    MemoSet L:0+0
    RetC
  }
  .method [public static "__Memoize"("""y:0:{}""")] (13,13) <"HH\\mixed" N > pu$E$val(<"HH\\string" "HH\\string" > $atom) {
    .ismemoizewrapper;
    .srcloc 13:8,13:8;
    VerifyParamType $atom
    GetMemoKeyL $atom
    SetL _1
    PopC
    MemoGet L0 L:1+1
    RetC
  L0:
    NullUninit
    NullUninit
    NullUninit
    CGetL $atom
    FCallClsMethodD <> 1 1 "" - "" "" "D" "pu$E$val$memoize_impl"
    MemoSet L:1+1
    RetC
  }
  .method [public static "__Memoize"("""y:0:{}""") "__Override"("""y:0:{}""")] (16,16) <"HH\\void" N > pu$F$Members() {
    .ismemoizewrapper;
    .srcloc 16:8,16:8;
    MemoGet L0 L:0+0
    RetC
  L0:
    NullUninit
    NullUninit
    NullUninit
    FCallClsMethodD <> 0 1 "" - "" "" "D" "pu$F$Members$memoize_impl"
    MemoSet L:0+0
    RetC
  }
  .method [public static "__Memoize"("""y:0:{}""")] (16,16) <"HH\\mixed" N > pu$F$fal(<"HH\\string" "HH\\string" > $atom) {
    .ismemoizewrapper;
    .srcloc 16:8,16:8;
    VerifyParamType $atom
    GetMemoKeyL $atom
    SetL _1
    PopC
    MemoGet L0 L:1+1
    RetC
  L0:
    NullUninit
    NullUninit
    NullUninit
    CGetL $atom
    FCallClsMethodD <> 1 1 "" - "" "" "D" "pu$F$fal$memoize_impl"
    MemoSet L:1+1
    RetC
  }
}

# members3.good.php ends here
