<?hh
interface IEWGPMB extends \IEPMB {
  abstract const type T as \IEWGP;
}
interface IEMBUID {}
interface IEWGP extends \IEP {}
interface IEWGPCOUB extends \IEWGPMB, \IEPCOUB {}
interface IEMBUIDCOUB extends \IEMBUIDMB {}
interface IEPMB extends \IEMBUIDMB {
  abstract const type T as \IEP;
}
interface IEP extends \IEMBUID {}
interface IEPCOUB extends \IEMBUIDCOUB {}
interface IEMBUIDMB {
  public function f(): this::T;
  abstract const type T as \IEMBUID;
}
function with_IEWGPCOUP(IEWGPCOUB $x): IEWGP {
  return $x->f();
}
<<__Rx>>
function extract_standalone_make_default(): nothing {
  throw new \Exception();
}
