<?hh
class GenericDerived<Tfirst> extends \GenericBase<Tfirst, \Mode> {
  public function foo(): void {
    throw new \Exception();
  }
}
function with_is_refinement<Tfirst, Tsecond>(
  GenericBase<Tfirst, Tsecond> $x,
): void {
  if ($x is GenericDerived<_>) {
    $x->foo();
  }
}
class GenericBase<Tfirst, Tsecond> {}
enum Mode: int as int {
  One = 0;
  Two = 0;
}
<<__Rx>>
function extract_standalone_make_default(): nothing {
  throw new \Exception();
}
/* HH_FIXME[4101] */
type EXTRACT_STANDALONE_ANY = \EXTRACT_STANDALONE_ANY_;
type EXTRACT_STANDALONE_ANY_<T> = T;
