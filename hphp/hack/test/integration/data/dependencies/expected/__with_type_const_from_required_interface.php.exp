<?hh
trait THasFoo {
  require implements \IHasFoo;
  public function getFoo(): this::TFoo {
    throw new \Exception();
  }
}
interface IHasFoo {
  abstract const type TFoo;
}
class IntFooWrapper implements \IHasFoo {
  use \THasFoo;
  const type TFoo = int;
}
function with_type_const_from_required_interface(IntFooWrapper $w): int {
  return $w->getFoo();
}
<<__Rx>>
function extract_standalone_make_default(): nothing {
  throw new \Exception();
}
