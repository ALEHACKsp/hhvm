=== IFC analysis results for while.php
Analyzing \simple:
* pc: pc
* This: None
* Return: <ret>
* Exception: \Exception<exn, exn_lump>
* Params:
  { $b -> <$b>; $s1 -> <$s1>; $s2 -> <$s2> }
* Final environment:
  Deps: {}
  Constraints:
    [lit < $x, $b < $b'1, $s1 < $s1'1, $s2 < $s2'1, $x < $x'1, $b'1 < $x'2,
     $s1'1 < $x'2, $b'1 < $x'3, $s2'1 < $x'3, $x'3 < $x'1, $x'1 < ret]
  Locals:
    { $#capability -> nothing;
      $#local_capability -> nothing;
      $b -> <$b'1>;
      $s1 -> <$s1'1>;
      $s2 -> <$s2'1>;
      $x -> <$x'1> }

Analyzing \union:
* pc: pc
* This: None
* Return: <ret>
* Exception: \Exception<exn, exn_lump>
* Params:
  { $b -> <$b>; $i -> <$i>; $s1 -> <$s1>; $s2 -> <$s2> }
* Final environment:
  Deps: {}
  Constraints:
    [$i < $x, $b < $b'1, $i < $i'1, $s1 < $s1'1, $s2 < $s2'1, $x < $x'1,
     $b'1 < $x'3, $s1'1 < $x'3, $b'1 < $x'4, $s2'1 < $x'4, $x'4 < $x'1,
     $x'1 < $x'5, $x'2 < $x'5, $x'5 < ret, $x'6 < ret]
  Locals:
    { $#capability -> nothing;
      $#local_capability -> nothing;
      $b -> <$b'1>;
      $i -> <$i'1>;
      $s1 -> <$s1'1>;
      $s2 -> <$s2'1>;
      $x -> (<$x'5> | <$x'6>) }

Analyzing \breaks:
* pc: pc
* This: None
* Return: <ret>
* Exception: \Exception<exn, exn_lump>
* Params:
  { $b -> <$b>; $i -> <$i>; $s1 -> <$s1>; $s2 -> <$s2> }
* Final environment:
  Deps: {}
  Constraints:
    [$i < $x, $b < $b'1, $i < $i'1, $s1 < $s1'1, $s2 < $s2'1, $x < $x'1,
     $b'1 < $x'3, $s1'1 < $x'3, $b'1 < $x'4, $s2'1 < $x'4, $x'4 < $x'1,
     $x'3 < $x'5, $x'1 < $x'5, $x'2 < $x'5, $x'5 < ret, $x'6 < ret]
  Locals:
    { $#capability -> nothing;
      $#local_capability -> nothing;
      $b -> <$b'1>;
      $i -> <$i'1>;
      $s1 -> <$s1'1>;
      $s2 -> <$s2'1>;
      $x -> (<$x'5> | <$x'6>) }

Analyzing \continues:
* pc: pc
* This: None
* Return: <ret>
* Exception: \Exception<exn, exn_lump>
* Params:
  { $b -> <$b>; $i -> <$i>; $s1 -> <$s1>; $s2 -> <$s2> }
* Final environment:
  Deps: {}
  Constraints:
    [$i < $x, $b < $b'1, $i < $i'1, $s1 < $s1'1, $s2 < $s2'1, $x < $x'1,
     $b'1 < $x'3, $s1'1 < $x'3, $b'1 < $x'4, $s2'1 < $x'4, $x'3 < $x'1,
     $x'4 < $x'1, $x'1 < $x'5, $x'2 < $x'5, $x'5 < ret, $x'6 < ret]
  Locals:
    { $#capability -> nothing;
      $#local_capability -> nothing;
      $b -> <$b'1>;
      $i -> <$i'1>;
      $s1 -> <$s1'1>;
      $s2 -> <$s2'1>;
      $x -> (<$x'5> | <$x'6>) }

