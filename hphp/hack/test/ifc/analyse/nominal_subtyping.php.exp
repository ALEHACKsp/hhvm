=== IFC analysis results for nominal_subtyping.php
Analyzing __construct:
* pc: pc
* This: \D<D, D_lump>
* Return: <ret>
* Exception: \Exception<exn, exn_lump>
* Params:
  { $pd -> <$pd> }
* Final environment:
  Deps: {}
  Constraints:
    [D < PD, pc < PD, $pd < PD]
  Locals:
    { $pd -> <$pd> }

Analyzing __construct:
* pc: pc
* This: \E<E, E_lump>
* Return: <ret>
* Exception: \Exception<exn, exn_lump>
* Params:
  { $pd -> <$pd>; $pe -> <$pe> }
* Final environment:
  Deps: { "\\D#__construct" }
  Constraints:
    [E < PD, pc < PD, $pd < PD, E < PE, pc < PE, $pe < PE,
     D#__construct_self < D#__construct_ret,
     D#__construct_exn_lump = exn_lump, D#__construct_exn < exn,
     D#__construct_exn < exn, D#__construct_self < pcjoin,
     D#__construct_exn < pcjoin, pcjoin < pcjoin'1, pc < pcjoin'1,
     {(this: \E<E, E_lump>)->\D#__construct<pcjoin'1, D#__construct_self>(<$pd>): <D#__construct_ret> [\Exception<D#__construct_exn,
                                                                    D#__construct_exn_lump>]}]
  Locals:
    { $pd -> <$pd>; $pe -> <$pe> }
    pc: D#__construct_exn

Analyzing \testPoliciedPropertiesED:
* pc: pc
* This: None
* Return: \D<D, D_lump>
* Exception: \Exception<exn, exn_lump>
* Params:
  { $e -> \E<E, E_lump> }
* Final environment:
  Deps: {}
  Constraints:
    [E_lump = D_lump, E < D]
  Locals:
    { $e -> \E<E, E_lump> }

Analyzing __construct:
* pc: pc
* This: \F<F, F_lump>
* Return: <ret>
* Exception: \Exception<exn, exn_lump>
* Params:
  { $pd -> <$pd>; $pe -> <$pe>; $pf -> <$pf> }
* Final environment:
  Deps: { "\\E#__construct" }
  Constraints:
    [F < PD, pc < PD, $pd < PD, F < PE, pc < PE, $pe < PE, F < PF, pc < PF,
     $pf < PF, E#__construct_self < E#__construct_ret,
     E#__construct_exn_lump = exn_lump, E#__construct_exn < exn,
     E#__construct_exn < exn, E#__construct_self < pcjoin,
     E#__construct_exn < pcjoin, pcjoin < pcjoin'1, pc < pcjoin'1,
     {(this: \F<F, F_lump>)->\E#__construct<pcjoin'1, E#__construct_self>(<$pd>,
                                                                    <$pe>): <E#__construct_ret> [\Exception<E#__construct_exn,
                                                                    E#__construct_exn_lump>]}]
  Locals:
    { $pd -> <$pd>; $pe -> <$pe>; $pf -> <$pf> }
    pc: E#__construct_exn

Analyzing \testPoliciedPropertiesFE:
* pc: pc
* This: None
* Return: \E<E, E_lump>
* Exception: \Exception<exn, exn_lump>
* Params:
  { $f -> \F<F, F_lump> }
* Final environment:
  Deps: {}
  Constraints:
    [F_lump = E_lump, F < E]
  Locals:
    { $f -> \F<F, F_lump> }

Analyzing \testPoliciedPropertiesFD:
* pc: pc
* This: None
* Return: \D<D, D_lump>
* Exception: \Exception<exn, exn_lump>
* Params:
  { $f -> \F<F, F_lump> }
* Final environment:
  Deps: {}
  Constraints:
    [F_lump = D_lump, F < D]
  Locals:
    { $f -> \F<F, F_lump> }

