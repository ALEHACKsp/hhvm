Decls:
  class \Exception: { policied_props = [] }
  class \HH\vec: { policied_props = [] }
  function \cipp: { kind = cipp }
  function \main: { kind = cipp }
  
Analyzing \main:
* pc: pc
* This: None
* Return: <ret>
* Params:
  lvars: {}
* Final environment:
  Deps: { "\\cipp" }
  Locals:
    lvars: { $x -> <$x>; $y -> <$y> }
Constraints:
  [PUBLIC < $x, cipp < cipp'1, pc < cipp'1, cipp'1 < $y, $x < bop, $y < bop,
   bop < ret]

Analyzing \cipp:
* pc: pc
* This: None
* Return: <ret>
* Params:
  lvars: {}
* Final environment:
  Deps: {}
  Locals:
    lvars: {}
Constraints:
  PUBLIC < ret

Flow constraints for \cipp:
  
  Simplified: True
  Raw: PUBLIC < ret

Flow constraints for \main:
  
  Simplified: True
  Raw:
  [PUBLIC < $x, cipp < cipp'1, pc < cipp'1, cipp'1 < $y, $x < bop, $y < bop,
   bop < ret]

