Parsed decls:

{ Direct_decl_parser.classes = {};
  funs =
  { "\\NS1\\f" ->
    { Typing_defs.fe_deprecated = None;
      fe_type =
      (Rwitness (root|namespace_unscoped.php line 5, characters 10-10),
       (Tfun
          { ft_arity = (Fstandard ()); ft_tparams = [];
            ft_where_constraints = []; ft_params = [];
            ft_implicit_params =
            { capability =
              (Rhint (root|namespace_unscoped.php line 5, characters 10-10),
               (Tunion []))
              };
            ft_ret =
            { et_enforced = false;
              et_type =
              (Rhint (root|namespace_unscoped.php line 5, characters 15-18),
               (Tprim Tvoid))
              };
            ft_flags =
            (make_ft_flags FSync None ~return_disposable:false
              ~returns_mutable:false ~returns_void_to_rx:false);
            ft_reactive = Nonreactive; ft_ifc_decl = FDPolicied {#PUBLIC} }));
      fe_pos = [5:10-11]; fe_php_std_lib = false };
    "\\NS2\\f" ->
    { Typing_defs.fe_deprecated = None;
      fe_type =
      (Rwitness (root|namespace_unscoped.php line 9, characters 10-10),
       (Tfun
          { ft_arity = (Fstandard ()); ft_tparams = [];
            ft_where_constraints = []; ft_params = [];
            ft_implicit_params =
            { capability =
              (Rhint (root|namespace_unscoped.php line 9, characters 10-10),
               (Tunion []))
              };
            ft_ret =
            { et_enforced = false;
              et_type =
              (Rhint (root|namespace_unscoped.php line 9, characters 15-18),
               (Tprim Tvoid))
              };
            ft_flags =
            (make_ft_flags FSync None ~return_disposable:false
              ~returns_mutable:false ~returns_void_to_rx:false);
            ft_reactive = Nonreactive; ft_ifc_decl = FDPolicied {#PUBLIC} }));
      fe_pos = [9:10-11]; fe_php_std_lib = false } };
  typedefs = {}; consts = {} }

They matched!
