# @generated
# @autocargo from //hphp/hack/src/parser:aast_parser
# Signature<<3c08b7401d04b6f6ce98f7b614c54b7f9347a3d7>>
[package]
name = "aast_parser"
edition = "2018"
version = "0.0.0"
include = ["../../aast_check.rs", "../../aast_parser.rs", "../../aast_parser_lib.rs", "../../rust_aast_parser_types.rs"]

[lib]
path = "../../aast_parser_lib.rs"

[dependencies]
coroutine_lowerer = { path = "../../coroutine/cargo/coroutine_lowerer" }
coroutine_parser_leak_tree = { path = "../../api/cargo/coroutine_parser_leak_tree" }
coroutine_smart_constructors = { path = "../coroutine_smart_constructors" }
decl_mode_parser = { path = "../../api/cargo/decl_mode_parser" }
lint_rust = { path = "../../../utils/lint" }
lowerer = { path = "../lowerer" }
mode_parser = { path = "../mode_parser" }
naming_special_names_rust = { path = "../../../naming" }
ocamlrep = { path = "../../../ocamlrep" }
ocamlrep_derive = { path = "../../../ocamlrep_derive" }
oxidized = { path = "../../../oxidized" }
parser_core_types = { path = "../core_types" }
rust_parser_errors = { path = "../errors" }
smart_constructors = { path = "../smart_constructors" }
stack_limit = { path = "../../../utils/stack_limit" }
itertools = "0.8"
regex = "1.3"
# @end of Signature<<3c08b7401d04b6f6ce98f7b614c54b7f9347a3d7>>
